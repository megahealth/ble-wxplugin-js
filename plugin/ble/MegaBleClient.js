"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function t(e,a){for(var n=0;n<a.length;n++){var t=a[n];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}return function(e,a,n){return a&&t(e.prototype,a),n&&t(e,n),e}}(),_MegaBleCmdApiManager=require("./MegaBleCmdApiManager.js"),_MegaBleCmdApiManager2=_interopRequireDefault(_MegaBleCmdApiManager),_MegaBleResponseManager=require("./MegaBleResponseManager.js"),_MegaBleResponseManager2=_interopRequireDefault(_MegaBleResponseManager),_MegaBleRawdataManager=require("./MegaBleRawdataManager.js"),_MegaBleRawdataManager2=_interopRequireDefault(_MegaBleRawdataManager),_MegaBleConst=require("./MegaBleConst.js"),_MegaUtils=require("./MegaUtils.js"),_MegaLean=require("./MegaLean.js"),_MegaLean2=_interopRequireDefault(_MegaLean);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,a){if(!(e instanceof a))throw new TypeError("Cannot call a class as a function")}var MegaBleClient=function(){function e(){_classCallCheck(this,e),this.api=null,this.responseManager=null,this.rawdataManager=null}return _createClass(e,[{key:"setCallback",value:function(e){this.callback=e}},{key:"_initCallbacks",value:function(){var n=this;wx.onBluetoothAdapterStateChange(function(e){n.callback.onAdapterStateChange(e)}),wx.onBLEConnectionStateChange(function(e){e.deviceId===n.deviceId&&(!e.connected&&n.responseManager&&n.clear(),n.callback.onConnectionStateChange(e))}),wx.onBLECharacteristicValueChange(function(e){if(n.responseManager&&e.deviceId===n.deviceId){var a=new Uint8Array(e.value);switch(e.characteristicId){case _MegaBleConst.BLE_CFG.CH_INDICATE:n.responseManager.handleIndicateResponse(a);break;case _MegaBleConst.BLE_CFG.CH_NOTIFY:n.responseManager.handleNotifyResponse(a);break;case _MegaBleConst.BLE_CFG.CH_READ:n.responseManager.handleReadResponse(a);break;case _MegaBleConst.BLE_CFG.CH_LOG_NOTIFY:91===a[0]&&n.rawdataManager&&(n.rawdataManager.queue(Array.from(a)),n.callback.onRawdataCount(n.rawdataManager.getCount(),n.rawdataManager.getBleCount(),n.rawdataManager.getDuration()))}}})}},{key:"connect",value:function(e,a,n){var t=this;this.name=e,this.deviceId=a;var i=Array.from(new Uint8Array(n));return 17<this.deviceId.length?this.realMac=i.slice(2,8).reverse().map(function(e){return("00"+e.toString(16)).slice(-2)}).join(":").toUpperCase():this.realMac=this.deviceId,console.log("will connect, realmac: "+this.realMac),this._initCallbacks(),new Promise(function(a,n){wx.createBLEConnection({deviceId:t.deviceId,success:function(){(0,_MegaUtils.discoverServicesAndChs)(t.deviceId).then(function(){t.api=new _MegaBleCmdApiManager2.default(t.deviceId),t.responseManager=new _MegaBleResponseManager2.default(t.api,t.callback),t.isConnected=!0,t.callback.onDeviceInfoUpdated({name:t.name,mac:t.realMac}),t.api.enablePipes().then(function(e){a(e)}).catch(function(e){n(e)})}).catch(function(e){return n(e)})},fail:function(e){return n(e)}})})}},{key:"startWithoutToken",value:function(e,a){return this.api.bindWithoutToken(e,a)}},{key:"startWithToken",value:function(e,a){return this.api.bindWithToken(e,a)}},{key:"startWithMasterToken",value:function(){return this.api.bindWithMasterToken()}},{key:"setUserInfo",value:function(e,a,n,t,i){this.api.setUserInfo(e,a,n,t,i)}},{key:"enableMonitorV1",value:function(e){this.api.enableMonitorV1(e)}},{key:"toggleLive",value:function(e){this.api.toggleLiveData(e)}},{key:"enableV2ModeLiveSpo",value:function(e){this.api.enableV2ModeLiveSpo(e,0)}},{key:"enableV2ModeDaily",value:function(e){this.api.enableV2ModeDaily(e,0)}},{key:"enableV2ModeSpoMonitor",value:function(e){this.api.enableV2ModeSpoMonitor(e,0)}},{key:"syncData",value:function(){this.api.syncMonitorData()}},{key:"enableRawdata",value:function(){this.rawdataManager||(this.rawdataManager=new _MegaBleRawdataManager2.default,this.api.enableRawdata(!0))}},{key:"disableRawdata",value:function(){this.rawdataManager&&(console.log("包数统计: app: "+this.rawdataManager.getCount()+", ble: "+this.rawdataManager.getBleCount()),this.rawdataManager.clear(),this.rawdataManager=null,this.api.enableRawdata(!1))}},{key:"clear",value:function(){this.responseManager&&(this.responseManager.handleDisconnect(),this.responseManager=null),this.rawdataManager&&(this.rawdataManager.clear(),this.rawdataManager=null),this.deviceId=null,this.isConnected=!1}},{key:"disconnect",value:function(){var e=this;return this.clear(),new Promise(function(a,n){e.isConnected?wx.closeBLEConnection({deviceId:e.deviceId,success:function(e){return a(e)},fail:function(e){return n(e)}}):a()})}},{key:"closeBluetoothAdapter",value:function(){wx.closeBluetoothAdapter()}}]),e}(),initSdk=function(t,i){return new Promise(function(a,n){_MegaLean2.default.get("/classes/SDKClient",{where:{appKey:i,appId:t},limit:1,keys:"valid"},function(e){e.data.results&&0<e.data.results.length&&e.data.results[0].valid?(_MegaBleConst.Config.AppId=t,_MegaBleConst.Config.AppKey=i,a(new MegaBleClient)):n("init sdk auth failed")},function(){n("init sdk error")})})};exports.default=initSdk;